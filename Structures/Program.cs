using System;

namespace Structures
{
    class Program
    {
        static void Main(string[] args)
        {

            /*
            Научиться:

            применять модификаторы доступа;
            создавать собственные типы данных.


            Что нужно сделать
            Улучшите программу, которую разработали в модуле 6 (Files). Создайте структуру «Сотрудник» со следующими полями:

            ID
            Дата и время добавления записи
            Ф.И.О.
            Возраст
            Рост
            Дата рождения
            Место рождения


            Для записей реализуйте следующие функции:

            Просмотр записи. Функция должна содержать параметр ID записи, которую необходимо вывести на экран. 
            Создание записи.
            Удаление записи.
            Редактирование записи.
            Загрузка записей в выбранном диапазоне дат.
            Сортировка по возрастанию и убыванию даты.


            После всех изменений записей создайте метод перезаписи изменённых данных в файл в таком виде:

            1#20.12.2021 00:12#Иванов Иван Иванович#25#176#05.05.1992#город Москва

            2#15.12.2021 03:12#Алексеев Алексей Иванович#24#176#05.11.1980#город Томск

            …



            Советы и рекомендации
            Обратите внимание, что в строке есть символ # — разделитель. Символа # не должно быть при чтении (разбить строку на массив поможет разделение строк с помощью метода String.Split).
            Создайте методы для работы с записями.
            Файл может быть с данными изначально. Для примера скопируйте данные, продемонстрированные выше.


            Что оценивается
            Создан ежедневник, в котором могут храниться записи.
            Одно из полей записи ― дата создания.
            Все записи сохраняются на диске.
            Все записи загружаются с диска.
            С диска загружаются записи в выбранном диапазоне дат.
            Записи можно создавать, редактировать и удалять.
            Записи сортируются по выбранному полю.
            */



            /// Разработать ежедневник.
            /// В ежедневнике реализовать возможность 
            /// - создания
            /// - удаления
            /// - реактирования 
            /// записей
            /// 
            /// В отдельной записи должно быть не менее пяти полей
            /// 
            /// Реализовать возможность 
            /// - Загрузки даннах из файла
            /// - Выгрузки даннах в файл
            /// - Добавления данных в текущий ежедневник из выбранного файла
            /// - Импорт записей по выбранному диапазону дат
            /// - Упорядочивания записей ежедневника по выбранному полю

            string? taskNumber = "1";

            string filePath = @"..\..\..\Staff.txt";
            bool isCatalogExists = File.Exists(filePath);
            int lastRecord = 1;


            Console.WriteLine("\t\tСправочник «Сотрудники»\n");

            while (taskNumber == "1" || taskNumber == "2")
            {

                Console.Clear();
                Console.Write("Выберите режим работы (1 -вывести данные на экран, 2 - заполнить данные и добавить в справочник, " +
                    "другие - завершение работы):\n");

                taskNumber = Console.ReadLine();
                Console.WriteLine("\n\n");

                switch (taskNumber)
                {
                    case "1":
                        {
                        }
                        break;

                    case "2":
                        {
                        }
                        break;

                    default:

                        Console.WriteLine("Удачного дня!");

                        break;
                }

                

                Console.ReadLine();
            }
        }
    }
}

